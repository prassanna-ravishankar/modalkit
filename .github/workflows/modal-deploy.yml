name: Modal Deploy

on:
  push:
    branches: [ develop, feat/* ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - staging

jobs:
  deploy:
    name: Deploy to Modal
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          enable-cache: true

      - name: Set up Python
        run: uv python install 3.12

      - name: Install dependencies
        run: uv sync

      - name: Install Modal CLI
        run: |
          uv pip install modal

      - name: Configure Modal credentials
        run: |
          mkdir -p ~/.modal
          echo '${{ secrets.MODAL_TOKEN }}' > ~/.modal/token_id
          echo '${{ secrets.MODAL_TOKEN_SECRET }}' > ~/.modal/token_secret

      - name: Sanitize branch name
        id: sanitize
        run: |
          SAFE_BRANCH=$(echo "${{ github.ref_name }}" | sed 's/[^a-zA-Z0-9-]/-/g' | tr '[:upper:]' '[:lower:]')
          echo "safe_branch=$SAFE_BRANCH" >> $GITHUB_OUTPUT

      - name: Deploy to Modal
        run: |
          export MODALKIT_APP_POSTFIX="-${{ steps.sanitize.outputs.safe_branch }}"
          uv run modal deploy examples/modalkit.yaml

      - name: Test deployment
        run: |
          sleep 10  # Wait for deployment to be ready
          # Add health check or basic test here
          echo "Deployment successful for branch: ${{ github.ref_name }}"

  cleanup:
    name: Cleanup old deployments
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref_name != 'develop'
    steps:
      - uses: actions/checkout@v4

      - name: Install Modal CLI
        run: |
          pip install modal

      - name: Configure Modal credentials
        run: |
          mkdir -p ~/.modal
          echo '${{ secrets.MODAL_TOKEN }}' > ~/.modal/token_id
          echo '${{ secrets.MODAL_TOKEN_SECRET }}' > ~/.modal/token_secret

      - name: List and cleanup old deployments
        run: |
          # List apps and remove old feature branch deployments
          modal app list | grep -E "modalkit.*-feat-" | head -n -3 | while read app; do
            echo "Stopping old deployment: $app"
            modal app stop "$app" || true
          done
